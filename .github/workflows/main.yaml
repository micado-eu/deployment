name: Create MICADO deployment


on:
  # Only run this workflow when a release is published.
  # To modify this workflow when other events occur, see:
  #   - https://docs.github.com/en/actions/using-workflows/triggering-a-workflow
  #   - https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
  #   - https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on
  #
  # Note that some steps may depend on context variables that are only
  # available for release events, so if you add other events, you may need to
  # alter other parts of this workflow.
  workflow_dispatch:
  release:
    types: [published]


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4


      # Create a "module.zip" archive containing all the module's required files.
      # If you have other directories or files that will need to be added to
      # your packaged module, add them here.
      - name: Create Module Archive
        run: |
          # Note that `zip` will only emit warnings when a file or directory
          # doesn't exist, it will not fail.
          tar \
            -czvf micado_deployment_${{github.event.release.tag_name}}.tar.gz \
            docker-compose.yaml \
            README.md \
            keycloak/realms \
            traefik
          # Don't forget to add a backslash at the end of the line for any
          # additional files or directories!


      # Update the GitHub release with the manifest and module archive files.
      - name: Update Release With Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          name: ${{ github.event.release.name }}
          draft: ${{ github.event.release.unpublished }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "micado_deployment_${{github.event.release.tag_name}}.tar.gz"
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}

