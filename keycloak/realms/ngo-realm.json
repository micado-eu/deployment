{
  "id" : "ngo",
  "realm" : "ngo",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "200cc6a7-13da-44b2-9b52-84c882c90c52",
      "name" : "Application/micado_ngo_migrant_manager",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "ngo",
      "attributes" : { }
    }, {
      "id" : "860dc275-8e15-4d5e-ba2e-39e6ac4f8a73",
      "name" : "default-roles-ngo",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "ngo",
      "attributes" : { }
    }, {
      "id" : "52e2385a-e23b-48d1-939d-e18cee341afc",
      "name" : "Application/micado_ngo_superadmin",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "ngo",
      "attributes" : { }
    }, {
      "id" : "61f24d7c-e696-4cd9-b691-25bb950d8fb1",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "ngo",
      "attributes" : { }
    }, {
      "id" : "9847e8bb-a41d-441f-a4ad-8d0e0ac4439a",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "ngo",
      "attributes" : { }
    }, {
      "id" : "763e1d49-568a-4402-8b86-16f69b317cff",
      "name" : "Application/micado_ngo_admin",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "ngo",
      "attributes" : { }
    } ],
    "client" : {
      "ngo_app" : [ ],
      "realm-management" : [ {
        "id" : "76640a49-e93f-4c6f-9e63-d148afd48eff",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "17ae7448-fa02-4ea6-b676-80310920f7f7",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "93718f9e-d224-409d-b367-2c8bb86f9961",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "a59111b2-8d66-48c9-9283-3e3ef92c8494",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "8aaa3de9-8cc2-490d-9162-a98b955725b4",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "c42646a0-a74f-400f-8940-6e4518d1247a",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "4400316e-29c1-4f9a-86bc-e46720dc0e5f",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "7a6af658-604d-400a-961e-b1777e01cd38",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-identity-providers", "view-events", "view-realm", "view-clients", "manage-realm", "create-client", "manage-clients", "view-users", "manage-identity-providers", "manage-users", "query-clients", "query-users", "manage-authorization", "impersonation", "query-groups", "query-realms", "view-authorization", "manage-events" ]
          }
        },
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "7efaad06-1c4b-4221-867e-232abfaf20de",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "beb34d94-0147-4e5b-bca8-78719d309a72",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "32a032b8-8fd1-4e35-acff-f40b088876de",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "287ae3cf-70ef-4647-b93e-09e031f8359e",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "96b4ffed-9e1d-40ed-831c-c4a2fcf3f8a3",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "aeab0eb1-c60b-4f33-abdd-577cecc96a0d",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "c06f2829-1b84-43e4-adf4-a51786ff1b18",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "8a4bac77-9166-4823-8871-29e41497be6a",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "020bf680-558d-4f32-b999-5f1cf829a71f",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "d582af5a-01e8-44cb-bdc1-75377cd3002e",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      }, {
        "id" : "e8bbab9c-c08b-46e1-832c-5a60d3a6e7ec",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "c0dac15f-d1c8-4887-bc60-34c2f985c306",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "5cf056c5-9626-46e7-afb8-76e783c406c5",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "7624364a-e579-45af-8fe9-5faa72a4ad39",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e0d80955-bed9-49b8-9c9b-07350a6a24e3",
        "attributes" : { }
      }, {
        "id" : "fe398df1-77c2-41c2-8b24-b02eff097a52",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e0d80955-bed9-49b8-9c9b-07350a6a24e3",
        "attributes" : { }
      }, {
        "id" : "8b165d97-1395-4694-ba2a-730a74756bd3",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e0d80955-bed9-49b8-9c9b-07350a6a24e3",
        "attributes" : { }
      }, {
        "id" : "f8d4c15d-f5e9-481f-9354-62ab16b74847",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "e0d80955-bed9-49b8-9c9b-07350a6a24e3",
        "attributes" : { }
      }, {
        "id" : "21e8f061-2767-43b5-bc02-e4b0e17365f7",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e0d80955-bed9-49b8-9c9b-07350a6a24e3",
        "attributes" : { }
      }, {
        "id" : "6afc3334-ae87-43a7-8fc0-adb52b23ec50",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e0d80955-bed9-49b8-9c9b-07350a6a24e3",
        "attributes" : { }
      }, {
        "id" : "57c8fa36-a512-4de2-92fb-f5b02ea75b1f",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "e0d80955-bed9-49b8-9c9b-07350a6a24e3",
        "attributes" : { }
      }, {
        "id" : "481c013e-ecc8-434a-8db1-0eff06eead6a",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "e0d80955-bed9-49b8-9c9b-07350a6a24e3",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ {
    "id" : "3e36fa50-e7f6-48b4-b18a-72074ec69957",
    "name" : "admin",
    "path" : "/admin"
  }, {
    "id" : "27759a39-3b85-43df-9689-3708d7848c3f",
    "name" : "admin2",
    "path" : "/admin2"
  } ],
  "defaultRole" : {
    "id" : "860dc275-8e15-4d5e-ba2e-39e6ac4f8a73",
    "name" : "default-roles-ngo",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "ngo"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "da85c470-08d2-4cee-8453-d1c24c958c0e",
    "createdTimestamp" : 1719219994882,
    "username" : "ngo-admin",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "firstName" : "NGO",
    "lastName" : "Admin",
    "credentials" : [ {
      "id" : "d9cc5a03-887f-4d10-a9f8-770a30087950",
      "type" : "password",
      "userLabel" : "My password",
      "value" : "${MICADO_KC_REALM_ADMIN_PASSWORD}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-ngo" ],
    "clientRoles" : {
      "realm-management" : [ "realm-admin" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "id" : "99e3bbd0-729c-4924-bf4f-dc40deef6ef8",
    "createdTimestamp" : 1719147470472,
    "username" : "service-account-admin-cli",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "serviceAccountClientId" : "admin-cli",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-ngo" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "e0d80955-bed9-49b8-9c9b-07350a6a24e3",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/ngo/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/ngo/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "c373928b-4506-4376-8b0c-c402d78d13d5",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/ngo/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/ngo/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "205d9bb6-c3f0-4b7b-9803-ba3fe83dc34e",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "f8bd1729-815d-4af0-882c-9e59dae9a36b",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.assertion.signature" : "false",
      "id.token.as.detached.signature" : "false",
      "saml.multivalued.roles" : "false",
      "saml.force.post.binding" : "false",
      "saml.encrypt" : "false",
      "post.logout.redirect.uris" : "+",
      "oauth2.device.authorization.grant.enabled" : "false",
      "saml.server.signature" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "false",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "b65cdc3e-462e-440d-9ec4-3b809c4c6663",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "15892160-fb7b-4b8e-a05e-cd948f8697be",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9cbf0b09-ae2f-41aa-8efe-d97e0c6bb4a7",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "5cf056c5-9626-46e7-afb8-76e783c406c5",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "a3c9fee4-b355-49f2-8daf-6dc2395d5bbc",
    "clientId" : "ngo_app",
    "name" : "NGO Auth",
    "description" : "",
    "rootUrl" : "https://${NGO_HOSTNAME}",
    "adminUrl" : "https://${NGO_HOSTNAME}",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "${NGO_REALM_CLIENT_SECRET}",
    "redirectUris" : [ "http://localhost:8080/*", "https://${NGO_HOSTNAME}/*" ],
    "webOrigins" : [ "http://localhost:8080", "https://${NGO_HOSTNAME}" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "saml.multivalued.roles" : "false",
      "saml.force.post.binding" : "false",
      "post.logout.redirect.uris" : "https://${NGO_HOSTNAME}/*##http://${NGO_HOSTNAME}/*",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml.client.signature" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.assertion.signature" : "false",
      "id.token.as.detached.signature" : "false",
      "client.secret.creation.time" : "1718347877",
      "saml.encrypt" : "false",
      "login_theme" : "micado",
      "saml.server.signature" : "false",
      "exclude.session.state.from.auth.response" : "false",
      "saml.artifact.binding" : "false",
      "saml_force_name_id_format" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "9dd00fbc-37ff-4ab4-bb85-6559032fc9e3",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientId",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientId",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "349f5391-476b-4f46-9592-a5957b99927d",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phone number",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3994456f-9f7e-496b-bfc1-fa59d1be7450",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1585b2d7-feb4-4cde-903d-de5c00c94083",
      "name" : "Group Mappers",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-group-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "full.path" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "21dd0513-c017-4c46-89e3-b5f1a03a1171",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "userinfo.token.claim" : "true",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "3a1462a3-234e-469f-a3d5-916b4ad8c428",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "${NGO_REALM_CLIENT_SECRET}",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "a05bd09e-1700-49b8-bb86-ce959a568ddb",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/ngo/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/ngo/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "f06d2486-cc9c-4145-b242-6566dbf44b0e",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "06057977-d2b8-4411-a811-6ad20c8650ed",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "c7a014ea-b12d-409a-bf9c-b038181e81ee",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "85db44b1-5305-42c4-85b3-3e3fbf44ff09",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "04791f30-02ea-4244-945d-97d7a6836b64",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "89a44442-e16b-44ca-9286-87182e696d61",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "718df149-ef68-4b82-8c6f-467411583e62",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "62a9bbb9-cfe4-4958-8ab0-878531d3e2a1",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7b28ec43-539d-4ab0-bbc7-35c5818231f9",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "156304b0-f639-435c-a171-d527d255f434",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "926a33bf-22ba-4499-8550-88d0f93e5174",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9854eea5-c87b-4aec-8f73-b3339115d82a",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3e1937ca-ad35-46fe-b60f-cae6690e3083",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a9dd78b2-41d3-4f57-ab6e-83a434cfc958",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "aad37769-3715-4503-b342-b9803b1eb9fe",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7ea7bb60-aee2-447d-9dc8-86dc5cf32547",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7feb8239-dc60-47d1-8a12-60a02a7cb0d5",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "75f196e9-737f-401b-b8a6-9e5cdc0319ba",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "50133f44-ae69-4517-b9f6-25cf86687b4f",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "5dae73e3-1a84-4232-bcfe-7f6f9fb1888e",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "20b50ae3-cf05-469e-8057-d7151c5ad9e1",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "848aad3d-7932-4541-b33e-b7603f827d4a",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "fd98a392-5abf-4c42-8425-8cc9925f44bf",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "647ccff7-1a13-4c1b-bcba-d8b62b0f1190",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "26201476-86e1-4155-a914-836cec55be8f",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "1e81cfd4-a273-40c1-8e53-1818a0b3a2cd",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f0fa97d1-d44e-49d2-8bfe-f417d721a080",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "09475ceb-787d-4a64-aa08-ea3bac279baf",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "81b00ed0-097a-4955-9d78-d08cfce9056a",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "5096dcc7-ac7a-487a-92ea-8efec42b0a8f",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "938f40ed-1a2a-483b-b784-efd963425ba2",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f8e428e6-b476-4840-bdcd-f92da73b2d98",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "86528df8-18ec-41ee-9666-7c1c3fd13cea",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "11180ef2-4212-4278-9fe9-aa339b64ecab",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "fa1fcee8-0d8a-44d2-bda9-1c3d6899cdc8",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "4fde5052-61f0-45d6-a960-bd915fea0e92",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "0f82806f-abb2-4671-905b-d0ae9dfd2f0f",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "d59bb380-2bce-434f-a1db-bd1fce6d13da",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "",
    "contentSecurityPolicy" : "",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "loginTheme" : "micado",
  "accountTheme" : "",
  "adminTheme" : "",
  "emailTheme" : "",
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "468a3c29-3bfe-41d5-ba86-7e4414a68407",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "9fa26a44-7242-440a-bc72-a8e719ebfc8a",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "27f33b57-bc41-4cab-bf12-62f3e079ed43",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-property-mapper", "oidc-address-mapper", "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-attribute-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper", "saml-role-list-mapper" ]
      }
    }, {
      "id" : "08a99713-7069-4b57-b4e8-127197fdbb9f",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-address-mapper", "saml-user-property-mapper", "oidc-usermodel-property-mapper", "saml-role-list-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-full-name-mapper", "oidc-usermodel-attribute-mapper" ]
      }
    }, {
      "id" : "a86342f5-588d-42b9-b47e-16f99fcebbb0",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "94feb8a5-8e01-4fc5-a602-25a8cdd1503f",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "9824140b-a5b4-40ab-9224-3eb789dd8faf",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "25563ae5-980b-4a37-8463-1412ee5152e1",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    } ],
    "org.keycloak.userprofile.UserProfileProvider" : [ {
      "id" : "858f2338-d965-4306-8687-d79f0bc0046a",
      "providerId" : "declarative-user-profile",
      "subComponents" : { },
      "config" : { }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "ddca5c77-513e-43d2-92f0-35cdce6f1532",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "de3bfb1c-b492-41b2-8b1a-e456edfd3106" ],
        "secret" : [ "syBvYQPbvb--jqXauwVvrBBdYXW9Eh-9Dd9OxFVA-IVvKfYtSr6J-jC88dDm0x0F1ci7X4nuXdPB-z8NuFh-gQ" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    }, {
      "id" : "ff1c67ba-eb12-41f0-920e-ff04336355aa",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEA54UqExbdIzNP4hmUq5mfS7bfAooT2Qsm93d6x88VjMdv46Gask67tk5CxLcQJjaOlKl0Rvhy97nZEjMGJFh37uc6LOtg1giK+BZlrPKAXIa6STtU3NgVV158jQ4lc++zUAq3l5K3yZOYaYWs47xPPNfD4IVQRjcm7r3hpuwvBSmxRecKZcv3u9iDP5k5E26RbwcD+N81dAf397LwSDxPw8C6m33U8AeNlyc1Ubz3dUbwsCxjuPX46N/qWml7tZavCnH9G5LNlgEzWpF/xeL0idcLq5mbFb+uAB/OlXZ9w0ErUR7d/rXWZfXUZFqxVTwXXy2voQbxj6Y7B/eKdmLrfQIDAQABAoIBABmFj/hPvmvpdaZmjIGIK0vE6nuUrhBwjsib5rCNDwKYX6i3wV5jmITFxs15orGbtQcFURibvcy6M4gykLxD9mCjI8Ic5m1hvrQPgADbMLRCc9mrzTSVK3EYrOE9zHol094AeHGgjlsNxrDnOAJY2WFLJcAj4hADd2q9CtmEUsCePLwl+8vh2RNyP3PDsteOIbeyiTDfVXiA1xHLAPGgxk0v+ZYoGfsvOuCBEeC25W4/cHis4sKI5LF/Zjc8asGNw4P6E/blI2X2wlO/tA6dEjNX49LFQh/j9uDLSxOpfYqOosFfpIXLIsVHvcjRmmPEQhMxZJfeZj0Bp/UmVs4Kl6ECgYEA/4SermSzd7UKqne25X4VumF/XAEc64w1L5K7wGsjcxrfqkpQR9Saiwpg5oCsNEKZxb2Iq4A7JkJ7DOnLVFrOKHsoBPYItJMX7YVPBnaz/R+w8XA0qIKs0qS3btiEUr6qI9Tbwv/IgVD3iLmRHStkqPeAx2yojxEumWRq3G256k0CgYEA5/T08oltOgOsoU6RLTdNtCxU5kQIJ4ED9sYpP4n6BK9Riti6T8/skt5G59Uhe4+ggnxhXrKsf8DzAT3+hPmRFcwOfmklT2sMjkMJQNUa/Ntgy2s/Ej+Dy9zhjGfLGAFgd0zWBcXDzN935/f8i2pmGR1ekWEtLfKAvU2AvWYtPfECgYBWLQ0zdeUNT3LMcVmu5qo/VNiWWA2/52acp9lImRm4nWynyy5uO2bv081AkE8DxR6FkVnBtZq9WZiUj1kzFvkGsBqcKbpf5GgihF5VqL0ldoW/t/8agg/1bvYqnT1rhsBtG0IO7yNZccw6QZOOie8GCYtWNvBWaA4WT8a2lw8n1QKBgGLnJ6pivpgGCQ2emnhVJGS2olyslW2CrVYDmILnKhvlRTeWwZpWZeEZtdIUJnqw+xeoQTxHoxW2B+d3r5azcxGAOI3d93KtimT+YGusch1uzQ7vY608N84tGF7twsMxkxhLQtajRKGOh2n5a01myLHcu/3xGXqF9C7DZSlc792BAoGAA0rdf4Yft+nChZeVxA2oCqDYO2l7wOdGhE+ze2rqKNAy2mCoT+/e9tg+6TkWXEfOwnH1SuQtPMNECDxhQcWyWi4sER7bdxOYKs1rm0KEfvxE1XqapKcf6Z6IWdIoWC0FH5VTjpoYNegyAXPhVBb1p8zZ7w8qeGmFK3Xb901UqVc=" ],
        "certificate" : [ "MIIClTCCAX0CBgGQRSyc5jANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANuZ28wHhcNMjQwNjIzMTI1NjEwWhcNMzQwNjIzMTI1NzUwWjAOMQwwCgYDVQQDDANuZ28wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDnhSoTFt0jM0/iGZSrmZ9Ltt8CihPZCyb3d3rHzxWMx2/joZqyTru2TkLEtxAmNo6UqXRG+HL3udkSMwYkWHfu5zos62DWCIr4FmWs8oBchrpJO1Tc2BVXXnyNDiVz77NQCreXkrfJk5hphazjvE8818PghVBGNybuveGm7C8FKbFF5wply/e72IM/mTkTbpFvBwP43zV0B/f3svBIPE/DwLqbfdTwB42XJzVRvPd1RvCwLGO49fjo3+paaXu1lq8Kcf0bks2WATNakX/F4vSJ1wurmZsVv64AH86Vdn3DQStRHt3+tdZl9dRkWrFVPBdfLa+hBvGPpjsH94p2Yut9AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAJgz+saraugPQhrmBSxvYBD6EEhuFhDbA1d6hUp4WWOOVC8mw814eWXhOFyPRly+4k1z5iPrXcbMjksQcXHhXuUdvIcaAuZBPlhd2xoQBEZNZ9mQDH67Udgo1xEkViMUDE0d8q0VNfJ0OXRi2cyWNJGxogoJjZ8ztpabWAEjXQuqVtMjYQiD2twwEropKnWHbuJeHCTumAEZDuHTo2RHj5OJ6zHJ/1M8ORXof4QXyEk/2TmXorhLXAquesAF1h1nSz41rF21n3fTkE12APtZfimq4Jt90NwYGgx63G46hvAsBB7aR09s3OvCgjk1gsUFBdMgJ37TjlpzEIbUVuYDyvM=" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "03c468a7-f433-4f14-aea9-004611f391ec",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAzSIA9dWNha+y1AxsH591mMz/Ce527soRUQ7BvbMqfPVXUJOb2FJUx5tS+DgbJVc7u7s/qe+FsrW+XOsfqq4LcP/bjuSJDG65TRLanSWUB6icLx5L5bMNP0sTu6EL/wnQ5yjSuPoVYsZQ/QrKRCTlJDuwqSm0I7ldjDqxCgwAMDwOhsoDpYaoX58pHQKI8CwGPFEd2xvQlukPaoApQElhwFZarmtOrO3XXWYM1tfMlIpIBQZJiZ07ivvoMB7Cz+daR2pfKWjV0mHL1mIZEoSG0OesIvV+fjcd4hk2+GVQQSxxaDF34FbV1LiLzt+W7//Tx3eoPrHOAyy6QbuLWHocgQIDAQABAoIBAClaA7YK6ujKaqMG7wvv5fGbz4TVwrlv2A5OSn1+ft/qSEP4wZeZvzfuxoq9qrE8FNFLFbIg1AOa0glip4NNawaIOV8kkEEGmAmitZmsr9rcYUG5WoTvM4oxDQULmcK7nJZguxvpZALBpiVgdbZHdr63Xq03ODZkYWiJk1NKaIZQVJDkSOJMVAFNsOSZeEr1M9esorJeb6Lf29fnc6k/1ESN6L4zeegw0jKaEljkTQqxDDzi9mdlAZgpd43UI4Yvf0VOPcdDun7jaEQuROuAUld+QlA8mBXVoMYnMWCAaa5JPU720dozd7QZMTPHsC/sY9xW/XnDdlrxL0AUdhgvQx0CgYEA7FWiuda0J4TUMqCDtJVkgTkegNcLEzfnztRUnrF7eK0JCdp9NF5iksZZWOTOcCYL1c4ie1VUtZLcv+WI3lwRO8jKOmH8LMWPFdSKONkjReB4NkBtFuvwgWLl63el8ghN6SY0+rK7oXKxVQbImT/aBFGWlJUGfVzDrO8oMZknFmUCgYEA3jO21LfcWxDt9t+BzRqgKvuGUQ5pDV/eBlZ6/0JigsAVDW5YM6Y1OYH0+K2KEnGkGkpmKBlPyQRGZvUBmE/y8aKG37aAw6SyDpgfyxGFTHjsVRV2nV1QLUPX1nbfvAi6Q/y1ola7xmtrJu5wmj2wR+L/EmECiQ4C0CIajF92Te0CgYEA0f7RxeFyWL8dMhMQlFA+athPM1phG+WME2r1+cBonvTZ2CiNIhBP9G1MjMFacapMz+EHIKHU0DY78kNJl5MlOQMUNkZEpZ+xoUsmupauUfO/vS0IAdsJ7F3tQIojKOmaGPX7E1vnfvCDg7KwYgOrfDTm4QV+K7xWnn4vL8sPQUUCgYBs8IfL5NTJZRR2PACEkXBDgovIw7rnjr/o9Y9aBK8NkaUAr7/Ymr1vk3KKVXLjNgoRxbYuJLLESC9IHQkKJvBiXZ+ooO6ifOW7WAQGaHGlG4gq8tnzryM2/hMdF6z7oH/KA2T90W5Airu/G5njVSlPJVCPLzayAUeJyZ6ggdEbxQKBgQDSrFYQQ+dfZJqs+W31E+tX1GEwFoIUiocKbGOGy4HoPqaTNPuB/H+lCMLUrXOjqw78MzQLCjaqc7hRzDh2CFoJDDakUb6XlqIorpamIWZkpagKQ6V10NZgekDcBGZ5GAwoZHl9g904AXAZRrj3G8lkDJflJYHH0gSSVp8LQcMCNQ==" ],
        "certificate" : [ "MIIClTCCAX0CBgGQRSyeRDANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANuZ28wHhcNMjQwNjIzMTI1NjEwWhcNMzQwNjIzMTI1NzUwWjAOMQwwCgYDVQQDDANuZ28wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDNIgD11Y2Fr7LUDGwfn3WYzP8J7nbuyhFRDsG9syp89VdQk5vYUlTHm1L4OBslVzu7uz+p74Wytb5c6x+qrgtw/9uO5IkMbrlNEtqdJZQHqJwvHkvlsw0/SxO7oQv/CdDnKNK4+hVixlD9CspEJOUkO7CpKbQjuV2MOrEKDAAwPA6GygOlhqhfnykdAojwLAY8UR3bG9CW6Q9qgClASWHAVlqua06s7dddZgzW18yUikgFBkmJnTuK++gwHsLP51pHal8paNXSYcvWYhkShIbQ56wi9X5+Nx3iGTb4ZVBBLHFoMXfgVtXUuIvO35bv/9PHd6g+sc4DLLpBu4tYehyBAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAHWjBLG1LOH0SfJbm4/AYbH7p1OHxoarkDhuRAB/+UG9UqzGWA3dSYczyxsx2tCDQzZTIgnke6AfD0mAW348p0b9zpx0kK5BgbDEWYznoLhuY1A2H3jgn6yi941rjKYpAVAre9DLqKoccZKa/+/AKeoRbAeZdRAUdlCPAJtJh1vGbKCPoUY8rAhRH2QT4Alm+EgHajaA5Ba2nx9s340WqtqaosjsCJQvVVPKR4YIhG3wpxXmlFhi6oV6hDG+VMvEBVetnpJ+kJgcLIRVRYX4Migx2tQYbTisKB5OwG//OiYV0ARIsoKx7joDdnOm00BCBRfzckA+Z2ifZikulhXzdes=" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "9c06e574-2388-4430-871b-147a325c9e6e",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "6cef7154-8a87-46cb-947c-9fba82db9c15" ],
        "secret" : [ "rNCrX0w4hvpmZ3Dm7zSnpQ" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "3a83f8bb-c995-40d2-b7e7-3e0021140bce",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "6340675c-1b41-4b53-8dfb-76616dc54d06",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9c33600e-77c1-4d46-8487-5efbc656b90f",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "2b40a4dc-ac6d-48cb-a960-2d9122c015b5",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a2126b89-7219-4169-8fa7-af4c644a8835",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9d022fcf-6c24-4845-9d0f-394e5df3f3e6",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7503ab36-46be-4c65-bbaf-0aef0b9f54bf",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f541f441-5544-40de-82c7-03d349c8afda",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c3f647a1-abda-436d-9340-1fdcd98d28c5",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a4fe3e48-72aa-4678-9a26-50830d2a7285",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3fcbcf5c-da0b-4fca-92c6-583efd9f8cb8",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "223f460f-03df-4f4e-a701-3c037330de59",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "66444117-152c-40b1-9d23-bcb3683cf8b6",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b0b4287c-a84e-4a2f-bc24-7c08a81f45de",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a68aab32-7716-4076-9285-4dd9b8405b1b",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b2fc6f50-6fbb-4619-ad34-59704d3a787e",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1f89d012-24a9-42e4-bed0-2ea063e00bd7",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "943959ac-1b51-40d8-99f3-1254b3c5dab8",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "d0e4204a-55dc-45ee-86d7-1c5cb45dd346",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "4913be02-df78-49b0-bcdc-501b26eb2d98",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "23.0.0",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}
